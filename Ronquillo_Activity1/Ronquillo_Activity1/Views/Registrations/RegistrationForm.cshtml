@model Ronquillo_Activity1.Models.Registration

@{
    ViewBag.Title = "RegistrationForm";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <title>Ronquillo | Registration Form</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-9ndCyUaIbzAi2FUVXJi0CjmCapSmO7SnpJef0486qhLnuZ2cdeRhO02iuK6FUUVM" crossorigin="anonymous">
    <style>
        .header, .footer {
            background-color: #343a40;
            color: #ffffff;
            padding: 15px;
            text-align: center;
        }

        .sidebar {
            background-color: #f8f9fa;
            width: 200px;
            position: absolute;
            top: 200px;
            bottom: 200px;
            display: flex;
            align-items: center;
            justify-content: center;
            padding-top: 20px;
        }

            .sidebar button {
                width: 100px;
            }

        .main-content {
            margin-left: 220px;
            padding: 20px;
        }
    </style>
</head>
<body>
    <div class="header">
        <h2>RONQUILLO REGISTRATION FORM</h2>
    </div>

    <div class="sidebar">
        @Html.ActionLink("Dashboard", "Index", null, new { @class = "btn btn-secondary ms-2" })
    </div>

    <div class="main-content">
        <div class="container mt-5">

            @using (Html.BeginForm("RegistrationForm", "Registrations", FormMethod.Post, new { @class = "mt-4" }))
            {
                @Html.AntiForgeryToken()

                <div class="mb-3">
                    @Html.LabelFor(model => model.Username, new { @class = "form-label" })
                    @Html.TextBoxFor(model => model.Username, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
                </div>

                <div class="mb-3">
                    @Html.LabelFor(model => model.Password, new { @class = "form-label" })
                    @Html.PasswordFor(model => model.Password, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                </div>

                <div class="mb-3">
                    @Html.LabelFor(model => model.ConfirmPassword, new { @class = "form-label" })
                    @Html.PasswordFor(model => model.ConfirmPassword, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                </div>

                <div class="mb-3">
                    @Html.LabelFor(model => model.Country, new { @class = "form-label" })
                    @Html.DropDownListFor(model => model.Country, new SelectList(new List<string> { "Select Country", "USA", "Philippines", "Japan" }), new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Country, "", new { @class = "text-danger" })
                </div>

                <div class="mb-3">
                    @Html.LabelFor(model => model.City, new { @class = "form-label" })
                    @Html.DropDownListFor(model => model.City, new SelectList(new List<string> { "Select City", "New York", "Quezon City", "Tokyo" }), new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                </div>

                <div class="mb-3">
                    @Html.LabelFor(model => model.Address, new { @class = "form-label" })
                    @Html.TextBoxFor(model => model.Address, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                </div>

                <div class="mb-3">
                    @Html.LabelFor(model => model.Mobile, new { @class = "form-label" })
                    @Html.TextBoxFor(model => model.Mobile, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Mobile, "", new { @class = "text-danger" })
                </div>

                <div class="form-check mb-3">
                    @Html.CheckBox("TermsAndConditions", new { @class = "form-check-input", id = "TermsAndConditions" })
                    <label class="form-check-label" for="TermsAndConditions">I accept the Terms & Conditions</label>
                </div>

                <button type="submit" class="btn btn-primary" onclick="return validateForm()">Submit</button>
            }
        </div>
    </div>

    <div class="footer">
        <p>All rights reserved Ronquillo 2024 &copy;</p>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js" integrity="sha384-geWF76RCwLtnZ8qwWowPQNguL3RmwHVBC9FhGdlKrxdiJJigb/j/68SIy3Te4Bkz" crossorigin="anonymous"></script>

    <script>
        function validateForm() {
            const termsAccepted = document.getElementById("TermsAndConditions").checked;
            if (!termsAccepted) {
                alert("Please accept the Terms & Conditions to proceed.");
                return false;
            }
            return true;
        }
    </script>
</body>
</html>