<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        Js3SAAAAAElFTkSuQmCC
</value>
  </data>
</root>